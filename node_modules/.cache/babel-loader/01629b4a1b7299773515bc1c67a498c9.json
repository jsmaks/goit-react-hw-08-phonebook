{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHUB\\\\React\\\\goit-react-hw-08-phonebook\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => /*#__PURE__*/_jsxDEV(Route, { ...routeProps,\n  render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: redirectTo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 50\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this);\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","connect","authSelectors","PrivateRoute","component","Component","isAuthenticated","redirectTo","routeProps","props","mapStateToProps","state","getAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,eAA5B;;;AAIA,MAAMC,YAAY,GAAG,CAAE;AACnBC,EAAAA,SAAS,EAAEC,SADQ;AAEnBC,EAAAA,eAFmB;AAGnBC,EAAAA,UAHmB;AAInB,KAAGC;AAJgB,CAAF,kBAOjB,QAAC,KAAD,OACIA,UADJ;AAEA,EAAA,MAAM,EAAEC,KAAK,IACbH,eAAe,gBAAG,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA8B,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA;AAH7C;AAAA;AAAA;AAAA;AAAA,QAPJ;;KAAMJ,Y;;AAeN,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC9BL,EAAAA,eAAe,EAAEJ,aAAa,CAACU,gBAAd,CAA+BD,KAA/B;AADa,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAACS,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {authSelectors} from '../redux/auth';\r\n\r\n\r\n\r\nconst PrivateRoute = ( {\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n\r\n}) => (\r\n    <Route\r\n    {...routeProps}\r\n    render={props=>\r\n    isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)"]},"metadata":{},"sourceType":"module"}