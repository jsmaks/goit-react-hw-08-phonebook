{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHUB\\\\React\\\\goit-react-hw-08-phonebook\\\\src\\\\components\\\\Contacts\\\\ContactsList.jsx\";\nimport React, { Component } from 'react';\nimport './Contacts.css';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, contactOperations } from '../../redux/phonebook';\nimport EditContactForm from './editContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Contacts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editContact: false,\n      idContact: null\n    };\n\n    this.handleToggleEditForm = id => {\n      this.setState({\n        editContact: false\n      });\n      this.setState({\n        editContact: true,\n        idContact: id\n      });\n    };\n  }\n\n  render() {\n    const {\n      libraryContacts,\n      onDelete\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"contacts__list\",\n        children: libraryContacts.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"contacts__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"contact__name\",\n            children: [el.name, \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contact__tel\",\n              children: el.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-red\",\n            onClick: () => onDelete(el.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), this.state.editContact && this.state.idContact === el.id ? /*#__PURE__*/_jsxDEV(EditContactForm, {\n            closeContact: this.handleToggleEditForm,\n            contactItem: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 75\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => this.handleToggleEditForm(el.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  libraryContacts: contactsSelectors.getVisibleContacts(state)\n});\n\nconst mapDisptachToProps = {\n  onDelete: contactOperations.deleteContact,\n  onEdit: contactOperations.editContact\n};\nexport default connect(mapStateToProps, mapDisptachToProps)(Contacts);","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/components/Contacts/ContactsList.jsx"],"names":["React","Component","connect","contactsSelectors","contactOperations","EditContactForm","Contacts","state","editContact","idContact","handleToggleEditForm","id","setState","render","libraryContacts","onDelete","props","map","el","name","number","mapStateToProps","getVisibleContacts","mapDisptachToProps","deleteContact","onEdit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,uBAArD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACNC,MAAAA,WAAW,EAAE,KADP;AAENC,MAAAA,SAAS,EAAE;AAFL,KADuB;;AAAA,SAM/BC,oBAN+B,GAMRC,EAAE,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,SAAS,EAAEE;AAAhC,OAAd;AAED,KAV8B;AAAA;;AAY/BE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAAgC,KAAKC,KAA3C;AAEA,wBACE;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBACGF,eAAe,CAACG,GAAhB,CAAoBC,EAAE,iBACrB;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,uBACGA,EAAE,CAACC,IADN,oBACY;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCD,EAAE,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,oBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAgC,YAAA,OAAO,EAAE,MAAML,QAAQ,CAACG,EAAE,CAACP,EAAJ,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAOG,KAAKJ,KAAL,CAAWC,WAAX,IAA0B,KAAKD,KAAL,CAAWE,SAAX,KAAyBS,EAAE,CAACP,EAAtD,gBAA2D,QAAC,eAAD;AACxD,YAAA,YAAY,EAAE,KAAKD,oBADqC;AAExD,YAAA,WAAW,EAAEQ;AAF2C;AAAA;AAAA;AAAA;AAAA,kBAA3D,gBAGK;AACJ,YAAA,SAAS,EAAC,KADN;AAEJ,YAAA,OAAO,EAAE,MAAM,KAAKR,oBAAL,CAA0BQ,EAAE,CAACP,EAA7B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVR;AAAA,WAAoCO,EAAE,CAACP,EAAvC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAxC8B;;AA2CjC,MAAMU,eAAe,GAAGd,KAAK,KAAK;AAChCO,EAAAA,eAAe,EAAEX,iBAAiB,CAACmB,kBAAlB,CAAqCf,KAArC;AADe,CAAL,CAA7B;;AAIA,MAAMgB,kBAAkB,GAAG;AACzBR,EAAAA,QAAQ,EAAEX,iBAAiB,CAACoB,aADH;AAEzBC,EAAAA,MAAM,EAAErB,iBAAiB,CAACI;AAFD,CAA3B;AAKA,eAAeN,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Contacts.css';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, contactOperations } from '../../redux/phonebook';\r\nimport EditContactForm from './editContactForm';\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    editContact: false,\r\n    idContact: null,\r\n  };\r\n\r\n  handleToggleEditForm = id => {\r\n    this.setState({ editContact: false});\r\n    this.setState({ editContact: true, idContact: id });\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { libraryContacts, onDelete } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"contacts__list\">\r\n          {libraryContacts.map(el => (\r\n            <li className=\"contacts__item\" key={el.id}>\r\n              <p className=\"contact__name\">\r\n                {el.name}:<span className=\"contact__tel\">{el.number}</span>\r\n              </p>\r\n              <button className=\"btn btn-red\" onClick={() => onDelete(el.id)}>\r\n                Delete\r\n              </button>\r\n              {this.state.editContact && this.state.idContact === el.id ? <EditContactForm\r\n                  closeContact={this.handleToggleEditForm}\r\n                  contactItem={el}\r\n                />: <button\r\n                className=\"btn\"\r\n                onClick={() => this.handleToggleEditForm(el.id)}\r\n              >\r\n                Edit\r\n              </button>}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  libraryContacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDisptachToProps = {\r\n  onDelete: contactOperations.deleteContact,\r\n  onEdit: contactOperations.editContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(Contacts);\r\n"]},"metadata":{},"sourceType":"module"}