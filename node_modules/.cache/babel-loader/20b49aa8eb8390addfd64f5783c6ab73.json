{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\"; // import actions from \"./phonebook-actions\";\n\nimport { addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter, fetchContactsRequest, fetchContactsSuccess, fetchContactsError, editContactSuccess } from \"./phonebook-actions\";\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_state, {\n    payload\n  }) => payload,\n  [addContactSuccess]: (state, {\n    payload\n  }) => [...state, payload],\n  [deleteContactSuccess]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload),\n  [editContactSuccess]: (state, {\n    payload\n  }) => state.map(contact => contact.id === payload.id ? payload : contact)\n});\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_state, action) => action.payload\n});\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false\n});\nconst error = createReducer(null, {});\nexport default combineReducers({\n  items: items,\n  filter: filterReducer,\n  loading,\n  error\n});","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/redux/phonebook/phonebook-reducer.js"],"names":["combineReducers","createReducer","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","editContactSuccess","items","_state","payload","state","filter","id","map","contact","filterReducer","action","loading","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CACA;;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,YAPF,EAQEC,oBARF,EASEC,oBATF,EAUEC,kBAVF,EAWEC,kBAXF,QAYO,qBAZP;AAcA,MAAMC,KAAK,GAAGZ,aAAa,CAAC,EAAD,EAAK;AAC9B,GAACS,oBAAD,GAAwB,CAACI,MAAD,EAAS;AAACC,IAAAA;AAAD,GAAT,KAAuBA,OADjB;AAE9B,GAACZ,iBAAD,GAAqB,CAACa,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,KAAwB,CAAC,GAAGC,KAAJ,EAAWD,OAAX,CAFf;AAG9B,GAACT,oBAAD,GAAwB,CAACU,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,KACtBC,KAAK,CAACC,MAAN,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKH,OAAhC,CAJ4B;AAK9B,GAACH,kBAAD,GAAsB,CAACI,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,KACpBC,KAAK,CAACG,GAAN,CAAUC,OAAO,IAAKA,OAAO,CAACF,EAAR,KAAeH,OAAO,CAACG,EAAvB,GAA4BH,OAA5B,GAAsCK,OAA5D;AAN4B,CAAL,CAA3B;AASA,MAAMC,aAAa,GAAGpB,aAAa,CAAC,EAAD,EAAK;AACtC,GAACO,YAAD,GAAgB,CAACM,MAAD,EAASQ,MAAT,KAAoBA,MAAM,CAACP;AADL,CAAL,CAAnC;AAIA,MAAMQ,OAAO,GAAGtB,aAAa,CAAC,KAAD,EAAQ;AACnC,GAACQ,oBAAD,GAAwB,MAAM,IADK;AAEnC,GAACC,oBAAD,GAAwB,MAAM,KAFK;AAGnC,GAACC,kBAAD,GAAsB,MAAM,KAHO;AAInC,GAACT,iBAAD,GAAqB,MAAM,IAJQ;AAKnC,GAACC,iBAAD,GAAqB,MAAM,KALQ;AAMnC,GAACC,eAAD,GAAmB,MAAM,KANU;AAOnC,GAACC,oBAAD,GAAwB,MAAM,IAPK;AAQnC,GAACC,oBAAD,GAAwB,MAAM,KARK;AASnC,GAACC,kBAAD,GAAsB,MAAM;AATO,CAAR,CAA7B;AAaA,MAAMiB,KAAK,GAAGvB,aAAa,CAAC,IAAD,EAAO,EAAP,CAA3B;AAEA,eAAeD,eAAe,CAAC;AAC7Ba,EAAAA,KAAK,EAAEA,KADsB;AAE7BI,EAAAA,MAAM,EAAEI,aAFqB;AAG7BE,EAAAA,OAH6B;AAI7BC,EAAAA;AAJ6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import actions from \"./phonebook-actions\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  editContactSuccess,\r\n} from \"./phonebook-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_state, {payload}) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [editContactSuccess]: (state, { payload }) =>\r\n    state.map(contact => (contact.id === payload.id ? payload : contact)),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (_state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  \r\n\r\n});\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items: items,\r\n  filter: filterReducer,\r\n  loading,\r\n  error\r\n});\r\n"]},"metadata":{},"sourceType":"module"}