{"ast":null,"code":"import{connect}from\"react-redux\";import*as actions from\"../../redux/phonebook/phonebook-actions\";import contactsSelectors from'../../redux/phonebook/phonebook-selectors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filter=function Filter(_ref){var value=_ref.value,onChange=_ref.onChange;return/*#__PURE__*/_jsxs(\"label\",{children:[\"Find contacts by name\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:value,onChange:onChange})]});};var mapStateToProps=function mapStateToProps(state){return{value:contactsSelectors.getFilter(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onChange:function onChange(event){return dispatch(actions.changeFilter(event.currentTarget.value));}};};export default connect(mapStateToProps,mapDispatchToProps)(Filter);","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/components/Filter/Filter.jsx"],"names":["connect","actions","contactsSelectors","Filter","value","onChange","mapStateToProps","state","getFilter","mapDispatchToProps","dispatch","event","changeFilter","currentTarget"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,yCAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,2CAA9B,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CAEtC,mBACE,8DAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAED,KAA1B,CAAiC,QAAQ,CAAEC,QAA3C,EAFF,GADF,CAMD,CARD,CASA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCH,KAAK,CAAEF,iBAAiB,CAACM,SAAlB,CAA4BD,KAA5B,CADyB,CAAZ,EAAxB,CAIA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCL,QAAQ,CAAE,kBAACM,KAAD,QACRD,CAAAA,QAAQ,CAACT,OAAO,CAACW,YAAR,CAAqBD,KAAK,CAACE,aAAN,CAAoBT,KAAzC,CAAD,CADA,EAD8B,CAAf,EAA3B,CAKA,cAAeJ,CAAAA,OAAO,CAACM,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CN,MAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\r\nimport contactsSelectors from '../../redux/phonebook/phonebook-selectors'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n \r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    value: contactsSelectors.getFilter(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) =>\r\n    dispatch(actions.changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n"]},"metadata":{},"sourceType":"module"}