{"ast":null,"code":"import _objectSpread from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"component\",\"isAuthenticated\",\"redirectTo\"];import React from\"react\";import{Route,Redirect}from'react-router-dom';import{connect}from'react-redux';import{authSelectors}from'../redux/auth';/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";var PublicRoute=function PublicRoute(_ref){var Component=_ref.component,isAuthenticated=_ref.isAuthenticated,redirectTo=_ref.redirectTo,routeProps=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},routeProps),{},{render:function render(props){return isAuthenticated&&routeProps.restricted?/*#__PURE__*/_jsx(Redirect,{to:redirectTo}):/*#__PURE__*/_jsx(Component,_objectSpread({},props));}}));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:authSelectors.getAuthenticated(state)};};export default connect(mapStateToProps)(PublicRoute);","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/components/PublicRoute.js"],"names":["React","Route","Redirect","connect","authSelectors","PublicRoute","Component","component","isAuthenticated","redirectTo","routeProps","props","restricted","mapStateToProps","state","getAuthenticated"],"mappings":"gZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,CAAeC,QAAf,KAA8B,kBAA9B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,aAAR,KAA4B,eAA5B,CAGA;AACA;AACA;AACA,G,2CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UACPC,CAAAA,SADO,MAClBC,SADkB,CAElBC,eAFkB,MAElBA,eAFkB,CAGlBC,UAHkB,MAGlBA,UAHkB,CAIfC,UAJe,6DAMlB,KAAC,KAAD,gCACMA,UADN,MAEE,MAAM,CAAE,gBAAAC,KAAK,QACXH,CAAAA,eAAe,EAAIE,UAAU,CAACE,UAA9B,cACE,KAAC,QAAD,EAAU,EAAE,CAAEH,UAAd,EADF,cAGE,KAAC,SAAD,kBAAeE,KAAf,EAJS,EAFf,GANkB,EAApB,CAkBA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BN,eAAe,CAAEJ,aAAa,CAACW,gBAAd,CAA+BD,KAA/B,CADa,CAAL,EAA7B,CAKA,cAAeX,CAAAA,OAAO,CAACU,eAAD,CAAP,CAAyBR,WAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {authSelectors} from '../redux/auth';\r\n\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getAuthenticated(state),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);"]},"metadata":{},"sourceType":"module"}