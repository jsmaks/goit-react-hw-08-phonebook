{"ast":null,"code":"import axios from \"axios\";\nimport { addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, editContactRequest, editContactSuccess, editContactError, fetchContactsRequest, fetchContactsSuccess, fetchContactsError } from \"./phonebook-actions\";\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  } //   axios\n  //     .get(\"/contacts\")\n  //     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n  //     .catch((error) => dispatch(fetchContactsError(error)));\n\n};\n\nconst addContact = data => dispatch => {\n  dispatch(addContactRequest());\n  axios.post(\"/contacts\", data).then(({\n    data\n  }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${id}`).then(() => dispatch(deleteContactSuccess(id))).catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst editContact = ({\n  id,\n  completed\n}) => dispatch => {\n  console.log(object);\n  const update = {\n    completed\n  };\n  dispatch(editContactRequest());\n  axios.patch(`/contacts/${id}`, update).then(({\n    data\n  }) => dispatch(editContactSuccess(data))).catch(error => dispatch(editContactError(error.message)));\n}; // eslint-disable-next-line\n\n\nexport default {\n  addContact,\n  deleteContact,\n  editContact,\n  fetchContacts\n};","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/redux/phonebook/phonebook-operations.js"],"names":["axios","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","editContactRequest","editContactSuccess","editContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","defaults","baseURL","fetchContacts","dispatch","data","get","error","message","addContact","post","then","catch","deleteContact","id","delete","editContact","completed","console","log","object","update","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,kBAPF,EAQEC,kBARF,EASEC,gBATF,EAUEC,oBAVF,EAWEC,oBAXF,EAYEC,kBAZF,QAaO,qBAbP;AAeAZ,KAAK,CAACa,QAAN,CAAeC,OAAf,GAAyB,uCAAzB;;AAGA,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;;AACA,MAAI;AACF,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAU,WAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACL,oBAAoB,CAACM,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACJ,kBAAkB,CAACO,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD,GAP6C,CAS9C;AACA;AACA;AACA;;AACD,CAbD;;AAeA,MAAMC,UAAU,GAAIJ,IAAD,IAAWD,QAAD,IAAc;AACzCA,EAAAA,QAAQ,CAACf,iBAAiB,EAAlB,CAAR;AACAD,EAAAA,KAAK,CACFsB,IADH,CACQ,WADR,EACqBL,IADrB,EAEGM,IAFH,CAEQ,CAAC;AAAEN,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACd,iBAAiB,CAACe,IAAD,CAAlB,CAF9B,EAGGO,KAHH,CAGUL,KAAD,IAAWH,QAAQ,CAACb,eAAe,CAACgB,KAAK,CAACC,OAAP,CAAhB,CAH5B;AAID,CAND;;AAQA,MAAMK,aAAa,GAAIC,EAAD,IAASV,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AAEAJ,EAAAA,KAAK,CACF2B,MADH,CACW,aAAYD,EAAG,EAD1B,EAEGH,IAFH,CAEQ,MAAMP,QAAQ,CAACX,oBAAoB,CAACqB,EAAD,CAArB,CAFtB,EAGGF,KAHH,CAGUL,KAAD,IAAWH,QAAQ,CAACV,kBAAkB,CAACa,KAAK,CAACC,OAAP,CAAnB,CAH5B;AAID,CAPD;;AASA,MAAMQ,WAAW,GAAG,CAAC;AAAEF,EAAAA,EAAF;AAAMG,EAAAA;AAAN,CAAD,KAAuBb,QAAQ,IAAI;AACrDc,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,QAAMC,MAAM,GAAG;AAAEJ,IAAAA;AAAF,GAAf;AAEAb,EAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;AAEAP,EAAAA,KAAK,CACFkC,KADH,CACU,aAAYR,EAAG,EADzB,EAC4BO,MAD5B,EAEGV,IAFH,CAEQ,CAAC;AAAEN,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACR,kBAAkB,CAACS,IAAD,CAAnB,CAF9B,EAGGO,KAHH,CAGSL,KAAK,IAAIH,QAAQ,CAACP,gBAAgB,CAACU,KAAK,CAACC,OAAP,CAAjB,CAH1B;AAID,CAVD,C,CAYA;;;AACA,eAAe;AACbC,EAAAA,UADa;AAEbI,EAAAA,aAFa;AAGbG,EAAAA,WAHa;AAIbb,EAAAA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  editContactRequest,\r\n  editContactSuccess,\r\n  editContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n\r\n  //   axios\r\n  //     .get(\"/contacts\")\r\n  //     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n  //     .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = (data) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", data)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst editContact = ({ id, completed }) => dispatch => {\r\n  console.log(object);\r\n  const update = { completed };\r\n\r\n  dispatch(editContactRequest());\r\n\r\n  axios\r\n    .patch(`/contacts/${id}`, update)\r\n    .then(({ data }) => dispatch(editContactSuccess(data)))\r\n    .catch(error => dispatch(editContactError(error.message)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  editContact,\r\n  fetchContacts,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}