{"ast":null,"code":"import _regeneratorRuntime from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{addContactRequest,addContactSuccess,addContactError,deleteContactRequest,deleteContactSuccess,deleteContactError,fetchContactsRequest,fetchContactsSuccess,fetchContactsError}from\"./phonebook-actions\";axios.defaults.baseURL=\"https://connections-api.herokuapp.com\";var fetchContacts=function fetchContacts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(fetchContactsRequest());_context.prev=1;_context.next=4;return axios.get(\"/contacts\");case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch(fetchContactsSuccess(data));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);dispatch(fetchContactsError(_context.t0.message));case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var addContact=function addContact(data){return function(dispatch){dispatch(addContactRequest());axios.post(\"/contacts\",data).then(function(_ref2){var data=_ref2.data;return dispatch(addContactSuccess(data));}).catch(function(error){return dispatch(addContactError(error.message));});};};var deleteContact=function deleteContact(id){return function(dispatch){dispatch(deleteContactRequest());axios.delete(\"/contacts/\".concat(id)).then(function(){return dispatch(deleteContactSuccess(id));}).catch(function(error){return dispatch(deleteContactError(error.message));});};};// eslint-disable-next-line\nexport default{addContact:addContact,deleteContact:deleteContact,fetchContacts:fetchContacts};","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/redux/phonebook/phonebook-operations.js"],"names":["axios","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","defaults","baseURL","fetchContacts","dispatch","get","data","message","addContact","post","then","catch","error","deleteContact","id","delete"],"mappings":"+TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,iBADF,CAEEC,iBAFF,CAGEC,eAHF,CAIEC,oBAJF,CAKEC,oBALF,CAMEC,kBANF,CAOEC,oBAPF,CAQEC,oBARF,CASEC,kBATF,KAUO,qBAVP,CAYAT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAyB,uCAAzB,CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,kGAAM,iBAAOC,QAAP,4IAC1BA,QAAQ,CAACN,oBAAoB,EAArB,CAAR,CAD0B,sCAGDP,CAAAA,KAAK,CAACc,GAAN,CAAU,WAAV,CAHC,uCAGhBC,IAHgB,kBAGhBA,IAHgB,CAIxBF,QAAQ,CAACL,oBAAoB,CAACO,IAAD,CAArB,CAAR,CAJwB,+EAMxBF,QAAQ,CAACJ,kBAAkB,CAAC,YAAMO,OAAP,CAAnB,CAAR,CANwB,oEAAN,gEAAtB,CAeA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,IAAD,QAAU,UAACF,QAAD,CAAc,CACzCA,QAAQ,CAACZ,iBAAiB,EAAlB,CAAR,CACAD,KAAK,CACFkB,IADH,CACQ,WADR,CACqBH,IADrB,EAEGI,IAFH,CAEQ,mBAAGJ,CAAAA,IAAH,OAAGA,IAAH,OAAcF,CAAAA,QAAQ,CAACX,iBAAiB,CAACa,IAAD,CAAlB,CAAtB,EAFR,EAGGK,KAHH,CAGS,SAACC,KAAD,QAAWR,CAAAA,QAAQ,CAACV,eAAe,CAACkB,KAAK,CAACL,OAAP,CAAhB,CAAnB,EAHT,EAID,CANkB,EAAnB,CAQA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,QAAQ,UAACV,QAAD,CAAc,CAC1CA,QAAQ,CAACT,oBAAoB,EAArB,CAAR,CAEAJ,KAAK,CACFwB,MADH,qBACuBD,EADvB,GAEGJ,IAFH,CAEQ,iBAAMN,CAAAA,QAAQ,CAACR,oBAAoB,CAACkB,EAAD,CAArB,CAAd,EAFR,EAGGH,KAHH,CAGS,SAACC,KAAD,QAAWR,CAAAA,QAAQ,CAACP,kBAAkB,CAACe,KAAK,CAACL,OAAP,CAAnB,CAAnB,EAHT,EAID,CAPqB,EAAtB,CASA;AACA,cAAe,CACbC,UAAU,CAAVA,UADa,CAEbK,aAAa,CAAbA,aAFa,CAGbV,aAAa,CAAbA,aAHa,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n\r\n  //   axios\r\n  //     .get(\"/contacts\")\r\n  //     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n  //     .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = (data) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", data)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}