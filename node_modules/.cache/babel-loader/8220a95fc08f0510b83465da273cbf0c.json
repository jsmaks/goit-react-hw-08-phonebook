{"ast":null,"code":"import React, { Component } from \"react\"; // import { connect } from \"react-redux\";\n// import contactOperations from \"../../redux/phonebook/phonebook-operations\";\n// import contactSelectors from \"../../redux/phonebook/phonebook-selectors\";\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass editContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // this.checkOnDuplicate(this.props.libraryContacts);\n\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n} // const mapStateToProps = (state) => ({\n// //   libraryContacts: contactSelectors.getAllContacts(state),\n// });\n// const mapDispatchToProps = (dispatch) => ({\n// //   addContact: (data) => dispatch(contactOperations.addContact(data)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(editContactForm);\n\n\nexport default editContactForm;","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/components/Contacts/editContactForm.js"],"names":["React","Component","editContactForm","state","name","number","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;;;;AAGA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCE,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD8B;;AAAA,SAMtCC,YANsC,GAMtBC,CAAD,IAAO;AACpB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AAEA,WAAKC,QAAL,CAAc;AACZ,SAACN,IAAD,GAAQI;AADI,OAAd;AAGD,KAZqC;;AAAA,SActCG,YAdsC,GActBJ,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACK,cAAF,GADoB,CAEpB;;AACC,WAAKF,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACA,KAlBmC;AAAA;;AAqBtCQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AAEF,wBACE,qCADF;AAID;;AA5BqC,C,CAiCxC;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,eAAeD,eAAf","sourcesContent":["import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import contactOperations from \"../../redux/phonebook/phonebook-operations\";\r\n// import contactSelectors from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\n\r\nclass editContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    };\r\n    \r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // this.checkOnDuplicate(this.props.libraryContacts);\r\n     this.setState({ name: \"\", number: \"\" });\r\n    };\r\n    \r\n\r\n  render() {\r\n      const { name, number } = this.state;\r\n      \r\n    return (\r\n      <>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// const mapStateToProps = (state) => ({\r\n// //   libraryContacts: contactSelectors.getAllContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n// //   addContact: (data) => dispatch(contactOperations.addContact(data)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(editContactForm);\r\nexport default editContactForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}