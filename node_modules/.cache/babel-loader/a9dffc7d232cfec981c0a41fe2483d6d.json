{"ast":null,"code":"import axios from \"axios\";\nimport { addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, fetchContactsRequest, fetchContactsSuccess, fetchContactsError } from \"./phonebook-actions\";\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  } //   axios\n  //     .get(\"/contacts\")\n  //     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n  //     .catch((error) => dispatch(fetchContactsError(error)));\n\n};\n\nconst addContact = data => dispatch => {\n  dispatch(addContactRequest());\n  axios.post(\"/contacts\", data).then(({\n    data\n  }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${id}`).then(() => dispatch(deleteContactSuccess(id))).catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst editContact = id => dispatch => {\n  dispatch(editContactRequest());\n  axios.delete(`/contacts/${id}`).then(() => dispatch(editContactSuccess(id))).catch(error => dispatch(editContactError(error.message)));\n}; // eslint-disable-next-line\n\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts\n};","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/redux/phonebook/phonebook-operations.js"],"names":["axios","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","defaults","baseURL","fetchContacts","dispatch","data","get","error","message","addContact","post","then","catch","deleteContact","id","delete","editContact","editContactRequest","editContactSuccess","editContactError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,kBATF,QAUO,qBAVP;AAYAT,KAAK,CAACU,QAAN,CAAeC,OAAf,GAAyB,uCAAzB;;AAGA,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;;AACA,MAAI;AACF,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,GAAN,CAAU,WAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACL,oBAAoB,CAACM,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACJ,kBAAkB,CAACO,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD,GAP6C,CAS9C;AACA;AACA;AACA;;AACD,CAbD;;AAeA,MAAMC,UAAU,GAAIJ,IAAD,IAAWD,QAAD,IAAc;AACzCA,EAAAA,QAAQ,CAACZ,iBAAiB,EAAlB,CAAR;AACAD,EAAAA,KAAK,CACFmB,IADH,CACQ,WADR,EACqBL,IADrB,EAEGM,IAFH,CAEQ,CAAC;AAAEN,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACX,iBAAiB,CAACY,IAAD,CAAlB,CAF9B,EAGGO,KAHH,CAGUL,KAAD,IAAWH,QAAQ,CAACV,eAAe,CAACa,KAAK,CAACC,OAAP,CAAhB,CAH5B;AAID,CAND;;AAQA,MAAMK,aAAa,GAAIC,EAAD,IAASV,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAACT,oBAAoB,EAArB,CAAR;AAEAJ,EAAAA,KAAK,CACFwB,MADH,CACW,aAAYD,EAAG,EAD1B,EAEGH,IAFH,CAEQ,MAAMP,QAAQ,CAACR,oBAAoB,CAACkB,EAAD,CAArB,CAFtB,EAGGF,KAHH,CAGUL,KAAD,IAAWH,QAAQ,CAACP,kBAAkB,CAACU,KAAK,CAACC,OAAP,CAAnB,CAH5B;AAID,CAPD;;AASA,MAAMQ,WAAW,GAAIF,EAAD,IAASV,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAACa,kBAAkB,EAAnB,CAAR;AAEA1B,EAAAA,KAAK,CACFwB,MADH,CACW,aAAYD,EAAG,EAD1B,EAEGH,IAFH,CAEQ,MAAMP,QAAQ,CAACc,kBAAkB,CAACJ,EAAD,CAAnB,CAFtB,EAGGF,KAHH,CAGUL,KAAD,IAAWH,QAAQ,CAACe,gBAAgB,CAACZ,KAAK,CAACC,OAAP,CAAjB,CAH5B;AAID,CAPD,C,CASA;;;AACA,eAAe;AACbC,EAAAA,UADa;AAEbI,EAAAA,aAFa;AAGbV,EAAAA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n\r\n  //   axios\r\n  //     .get(\"/contacts\")\r\n  //     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n  //     .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = (data) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", data)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst editContact = (id) => (dispatch) => {\r\n  dispatch(editContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(editContactSuccess(id)))\r\n    .catch((error) => dispatch(editContactError(error.message)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}