{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHUB\\\\React\\\\goit-react-hw-08-phonebook\\\\src\\\\components\\\\Contacts\\\\editContactForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactOperations from \"../../redux/phonebook/phonebook-operations\";\nimport contactSelectors from \"../../redux/phonebook/phonebook-selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass editContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.checkOnDuplicate(this.props.libraryContacts);\n      this.reset();\n    };\n\n    this.checkOnDuplicate = list => {\n      const nameLowerCase = this.state.name.toLowerCase();\n      list.find(({\n        name\n      }) => name.toLowerCase() === nameLowerCase) ? alert(`${this.state.name} is alredy in contacts`) : this.props.addContact(this.state);\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          value: name,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0446\\u0438\\u0444\\u0440 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u044B, \\u0442\\u0438\\u0440\\u0435, \\u043A\\u0440\\u0443\\u0433\\u043B\\u044B\\u0435 \\u0441\\u043A\\u043E\\u0431\\u043A\\u0438 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0442\\u044C\\u0441\\u044F \\u0441 +\",\n          required: true,\n          value: number,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Save contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({//   libraryContacts: contactSelectors.getAllContacts(state),\n}); // const mapDispatchToProps = (dispatch) => ({\n// //   addContact: (data) => dispatch(contactOperations.addContact(data)),\n// });\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(editContactForm);","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/components/Contacts/editContactForm.js"],"names":["React","Component","connect","contactOperations","contactSelectors","editContactForm","state","name","number","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","checkOnDuplicate","props","libraryContacts","reset","list","nameLowerCase","toLowerCase","find","alert","addContact","render","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;AACA,OAAOC,gBAAP,MAA6B,2CAA7B;;;AAGA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCK,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD8B;;AAAA,SAKtCC,YALsC,GAKtBC,CAAD,IAAO;AACpB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AAEA,WAAKC,QAAL,CAAc;AACZ,SAACN,IAAD,GAAQI;AADI,OAAd;AAGD,KAXqC;;AAAA,SAatCG,YAbsC,GAatBJ,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKC,gBAAL,CAAsB,KAAKC,KAAL,CAAWC,eAAjC;AACA,WAAKC,KAAL;AACD,KAjBqC;;AAAA,SAkBtCH,gBAlBsC,GAkBlBI,IAAD,IAAU;AAC3B,YAAMC,aAAa,GAAG,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,WAAhB,EAAtB;AAEAF,MAAAA,IAAI,CAACG,IAAL,CAAU,CAAC;AAAEhB,QAAAA;AAAF,OAAD,KAAcA,IAAI,CAACe,WAAL,OAAuBD,aAA/C,IACIG,KAAK,CAAE,GAAE,KAAKlB,KAAL,CAAWC,IAAK,wBAApB,CADT,GAEI,KAAKU,KAAL,CAAWQ,UAAX,CAAsB,KAAKnB,KAA3B,CAFJ;AAGD,KAxBqC;;AAAA,SA0BtCa,KA1BsC,GA0B9B,MAAM;AACZ,WAAKN,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KA5BqC;AAAA;;AA8BtCkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAA,8BACE;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,OAAO,EAAC,wHAHV;AAIE,UAAA,KAAK,EAAC,icAJR;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,KAAK,EAAEP,IANT;AAOE,UAAA,QAAQ,EAAE,KAAKE;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAA,0CAEE;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAC,wFAHV;AAIE,UAAA,KAAK,EAAC,+hBAJR;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,KAAK,EAAED,MANT;AAOE,UAAA,QAAQ,EAAE,KAAKC;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA2BE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAjEqC;;AAsExC,MAAMkB,eAAe,GAAIrB,KAAD,KAAY,CACpC;AADoC,CAAZ,CAAxB,C,CAIA;AACA;AACA;;;AAEA,eAAeJ,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,eAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactOperations from \"../../redux/phonebook/phonebook-operations\";\r\nimport contactSelectors from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\n\r\nclass editContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.checkOnDuplicate(this.props.libraryContacts);\r\n    this.reset();\r\n  };\r\n  checkOnDuplicate = (list) => {\r\n    const nameLowerCase = this.state.name.toLowerCase();\r\n\r\n    list.find(({ name }) => name.toLowerCase() === nameLowerCase)\r\n      ? alert(`${this.state.name} is alredy in contacts`)\r\n      : this.props.addContact(this.state);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btn\" type=\"submit\">\r\n          Save contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n//   libraryContacts: contactSelectors.getAllContacts(state),\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n// //   addContact: (data) => dispatch(contactOperations.addContact(data)),\r\n// });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(editContactForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}