{"ast":null,"code":"import _classCallCheck from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/GitHUB/React/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{connect}from\"react-redux\";// import Container from \"../components/Container/Container\";\nimport Form from\"../components/FormContacts/Form\";import Contacts from\"../components/Contacts/ContactsList\";import Filter from\"../components/Filter/Filter\";import contactsOperations from\"../redux/phonebook/phonebook-operations\";import contactsSelectors from\"../redux/phonebook/phonebook-selectors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Phonebook=/*#__PURE__*/function(_Component){_inherits(Phonebook,_Component);var _super=_createSuper(Phonebook);function Phonebook(){_classCallCheck(this,Phonebook);return _super.apply(this,arguments);}_createClass(Phonebook,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchContacts();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(Form,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"}),/*#__PURE__*/_jsx(Filter,{}),this.props.isLoadingContacts&&/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u0435\\u043C...\"}),/*#__PURE__*/_jsx(Contacts,{})]});}}]);return Phonebook;}(Component);var mapStateToProps=function mapStateToProps(state){return{isLoadingContacts:contactsSelectors.getLoading(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchContacts:function fetchContacts(){return dispatch(contactsOperations.fetchContacts());}};};export default connect(mapStateToProps,mapDispatchToProps)(Phonebook);","map":{"version":3,"sources":["D:/GitHUB/React/goit-react-hw-08-phonebook/src/pages/Phonebook.js"],"names":["React","Component","connect","Form","Contacts","Filter","contactsOperations","contactsSelectors","Phonebook","props","fetchContacts","isLoadingContacts","mapStateToProps","state","getLoading","mapDispatchToProps","dispatch"],"mappings":"onBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA;AAEA,MAAOC,CAAAA,IAAP,KAAiB,iCAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qCAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,yCAA/B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,wCAA9B,C,2FAEMC,CAAAA,S,uPACJ,4BAAoB,CAClB,KAAKC,KAAL,CAAWC,aAAX,GACD,C,sBACD,iBAAS,CACP,mBAEE,oCACE,iCADF,cAEE,KAAC,IAAD,IAFF,cAGE,gCAHF,cAIE,KAAC,MAAD,IAJF,CAKG,KAAKD,KAAL,CAAWE,iBAAX,eAAgC,iFALnC,cAME,KAAC,QAAD,IANF,GAFF,CAWD,C,uBAhBqBV,S,EAkBxB,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCF,iBAAiB,CAAEJ,iBAAiB,CAACO,UAAlB,CAA6BD,KAA7B,CADe,CAAZ,EAAxB,CAGA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCN,aAAa,CAAE,+BAAMM,CAAAA,QAAQ,CAACV,kBAAkB,CAACI,aAAnB,EAAD,CAAd,EADyB,CAAf,EAA3B,CAGA,cAAeR,CAAAA,OAAO,CAACU,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CP,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import Container from \"../components/Container/Container\";\r\n\r\nimport Form from \"../components/FormContacts/Form\";\r\nimport Contacts from \"../components/Contacts/ContactsList\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport contactsOperations from \"../redux/phonebook/phonebook-operations\";\r\nimport contactsSelectors from \"../redux/phonebook/phonebook-selectors\";\r\n\r\nclass Phonebook extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n     \r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        {this.props.isLoadingContacts && <h1>Загружаем...</h1>}\r\n        <Contacts />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n"]},"metadata":{},"sourceType":"module"}